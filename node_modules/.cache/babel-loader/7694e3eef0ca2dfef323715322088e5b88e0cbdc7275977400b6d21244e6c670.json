{"ast":null,"code":"var _jsxFileName = \"/Users/lisautsett/Developer/projects/aidenged/aiden-ged/src/Components/Quiz.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useParams } from \"react-router-dom\";\nimport { scienceQuizzes } from \"../data.js\";\nimport { Container, Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Quiz = () => {\n  _s();\n  const {\n    lessonId\n  } = useParams();\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [grade, setGrade] = useState(0);\n  const handleChange = (questionId, selectedOption) => {\n    const answer = {\n      questionId,\n      selectedOption\n    };\n    setAnswers({\n      ...answers,\n      [questionId]: answer\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSubmitted(true);\n  };\n  const quiz = scienceQuizzes.find(quiz => quiz.lessonId === parseInt(lessonId));\n  const calcGrade = () => {\n    let grade = 0;\n    for (let i = 0; i < quiz.questions.length; i++) {\n      if (answers[i].selectedOption === quiz.questions[i].correctAnswer) {\n        grade++;\n      }\n    }\n    return grade;\n  };\n  useEffect(() => {\n    console.log(answers);\n  }, [answers]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: submitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Results: \", calcGrade()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: quiz.questions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Question \", question.id, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), \" \", answers[question.id].selectedOption === question.correctAnswer ? \"Correct ✓\" : \"Incorrect x\", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Your Answer: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), answers[question.id].selectedOption, \", \", /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Correct Answer: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 56\n          }, this), question.correctAnswer]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: handleSubmit,\n      children: [quiz.questions.map((question, index) => /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: `question${index}`,\n          children: question.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.options.map((option, optionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"radio\",\n              name: `question${index}`,\n              id: `question${index}_option${optionIndex}`,\n              value: option,\n              onChange: () => handleChange(question.id, option),\n              checked: answers[question.id] ? answers[question.id].selectedOption === option : false\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              for: `question${index}_option${optionIndex}`,\n              children: option\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this)]\n          }, optionIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        type: \"submit\",\n        disabled: Object.keys(answers).length < quiz.questions.length,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Quiz, \"xbWx41hzeQZkhIxSWO/WZ1le+Vs=\", false, function () {\n  return [useParams];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["Link","useParams","scienceQuizzes","Container","Button","Form","FormGroup","Input","Label","useEffect","useState","jsxDEV","_jsxDEV","Quiz","_s","lessonId","answers","setAnswers","submitted","setSubmitted","grade","setGrade","handleChange","questionId","selectedOption","answer","handleSubmit","e","preventDefault","quiz","find","parseInt","calcGrade","i","questions","length","correctAnswer","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","question","id","onSubmit","index","for","options","option","optionIndex","type","name","value","onChange","checked","color","disabled","Object","keys","_c","$RefreshReg$"],"sources":["/Users/lisautsett/Developer/projects/aidenged/aiden-ged/src/Components/Quiz.jsx"],"sourcesContent":["import { Link, useParams } from \"react-router-dom\";\nimport { scienceQuizzes } from \"../data.js\";\nimport { Container, Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport { useEffect, useState } from \"react\";\n\nexport const Quiz = () => {\n  const { lessonId } = useParams();\n  const [answers, setAnswers] = useState({});\n  const [submitted, setSubmitted] = useState(false);\n  const [grade, setGrade] = useState(0);\n\n  const handleChange = (questionId, selectedOption) => {\n    const answer = { questionId, selectedOption };\n    setAnswers({ ...answers, [questionId]: answer });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setSubmitted(true);\n  };\n\n  const quiz = scienceQuizzes.find(\n    (quiz) => quiz.lessonId === parseInt(lessonId)\n  );\n  const calcGrade = () => {\n    let grade = 0;\n    for (let i = 0; i < quiz.questions.length; i++) {\n      if (answers[i].selectedOption === quiz.questions[i].correctAnswer) {\n        grade++;\n      }\n    }\n    return grade;\n  };\n  useEffect(() => {\n    console.log(answers);\n  }, [answers]);\n\n  return (\n    <Container>\n      {submitted ? (\n        <div>\n          <h2>Results: {calcGrade()}</h2>\n          <ul>\n            {quiz.questions.map((question) => (\n              <li key={question.id}>\n                <strong>Question {question.id}:</strong>{\" \"}\n                {answers[question.id].selectedOption === question.correctAnswer\n                  ? \"Correct ✓\"\n                  : \"Incorrect x\"}\n                <p>Your Answer: </p>\n                {answers[question.id].selectedOption}, <p>Correct Answer: </p>\n                {question.correctAnswer}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <Form onSubmit={handleSubmit}>\n          {quiz.questions.map((question, index) => (\n            <FormGroup key={index}>\n              <Label for={`question${index}`}>{question.question}</Label>\n              <div>\n                {question.options.map((option, optionIndex) => (\n                  <div key={optionIndex}>\n                    <Input\n                      type=\"radio\"\n                      name={`question${index}`}\n                      id={`question${index}_option${optionIndex}`}\n                      value={option}\n                      onChange={() => handleChange(question.id, option)}\n                      checked={\n                        answers[question.id]\n                          ? answers[question.id].selectedOption === option\n                          : false\n                      }\n                    />\n                    <Label for={`question${index}_option${optionIndex}`}>\n                      {option}\n                    </Label>\n                  </div>\n                ))}\n              </div>\n            </FormGroup>\n          ))}\n          <Button\n            color=\"primary\"\n            type=\"submit\"\n            disabled={Object.keys(answers).length < quiz.questions.length}\n          >\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Container>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}